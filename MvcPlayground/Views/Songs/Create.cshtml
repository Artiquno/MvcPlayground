@model MvcPlayground.Models.Song

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

<div ng-app="create-song" ng-controller="CreateSongController">
	@using (Html.BeginForm("Create", "Songs", FormMethod.Post, new { @enctype = "multipart/form-data", @name="createForm" })) 
	{
		@Html.AntiForgeryToken()
    
		<div class="form-horizontal">
			<h4>Song</h4>
			<hr />
			@Html.ValidationSummary(true, "", new { @class = "text-danger" })
			<div class="form-group">
				@Html.LabelFor(model => model.AlbumId, "AlbumId", htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.DropDownList("AlbumId", null, htmlAttributes: new { @class = "form-control" })
					@Html.ValidationMessageFor(model => model.AlbumId, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.GenreId, "GenreId", htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.DropDownList("GenreId", null, htmlAttributes: new { @class = "form-control" })
					@Html.ValidationMessageFor(model => model.GenreId, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.FileId, "FileId", htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.DropDownList("FileId", null, htmlAttributes: new { @class = "form-control" })
					@Html.ValidationMessageFor(model => model.FileId, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.ReleaseDate, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.ReleaseDate, new { htmlAttributes = new { @class = "form-control", @uib_datepicker_popup = "", @is_open = "datepickers.releaseDate.opened", @ng_click = "datepickers.releaseDate.open()" , @ng_model = "song.releaseDate" , @datepicker_options = "datepickers.releaseDate.config" } })
					@Html.ValidationMessageFor(model => model.ReleaseDate, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.TrackNr, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.TrackNr, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.TrackNr, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.DiscNr, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.DiscNr, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.DiscNr, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.Rating, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@for (int i = 1; i <= 5; ++i)
					{
						<label class="radio-inline">
							<input type="radio" value="@i" id="Rating@(i)" name="Rating" ng-model="song.rating" />
							<span>@i</span>
						</label>
					}
					@Html.ValidationMessageFor(model => model.Rating, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.Lyrics, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.Lyrics, new { htmlAttributes = new { @class = "form-control", @rows = 8 } })
					@Html.ValidationMessageFor(model => model.Lyrics, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@*@Html.LabelFor(model => model.Cover, htmlAttributes: new { @class = "control-label col-md-2" })*@
				<div class="col-md-offset-2 col-md-10">
					<input type="file" name="Cover" id="Cover" ngf-drop ngf-select ng-model="song.cover" />
					@*<div class="form-control-file" ng-model="song.cover" ngf-select ngf-drop ngf-accept="'image/*'" ngf-pattern="'image/*'" ng-change="pickedImage()">
						<div ng-show="!song.cover">
							<i class="fa fa-file-image-o"></i>
							<span>Drop or select cover image</span>
						</div>
						<div ng-cloak class="image-preview" ng-show="song.cover">
							<img ngf-src="song.cover" alt=""/>
						</div>
					</div>*@
					@Html.ValidationMessageFor(model => model.Cover, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				<div class="col-md-offset-2 col-md-10">
					<input type="submit" value="Create" class="btn btn-primary" />
				</div>
			</div>
		</div>
	}
</div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section scripts {
	@Scripts.Render("~/bundles/angular")
	@Scripts.Render("~/bundles/moment")
	<script src="~/angular/controllers/create-song.js"></script>	
}
